<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xazhao</groupId>
    <artifactId>whisper</artifactId>
    <version>${revision}</version>

    <!-- 打包方式 -->
    <packaging>pom</packaging>

    <!-- 子模块 -->
    <modules>
        <module>whisper-system</module>
        <module>whisper-common</module>
        <module>whisper-gateway</module>
        <module>whisper-elasticsearch</module>
        <module>whisper-security</module>
        <module>whisper-business</module>
        <module>whisper-auth</module>
    </modules>

    <!-- 模块信息 -->
    <name>${project.artifactId}</name>
    <description>轻语管理系统基础pom文件，管理项目所有依赖版本</description>
    <url>https://github.com/xazhaox/whisper</url>
    <developers>
        <developer>
            <name>Zhao.An</name>
        </developer>
    </developers>

    <properties>
        <!-- 源码及编译输出的编码集 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- 项目版本 -->
        <revision>2024.8.5-alpha</revision>
        <!-- JDK版本 -->
        <java.version>17</java.version>

        <!-- 编译JDK版本 -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- 主要核心依赖 -->
        <spring-boot.version>3.3.2</spring-boot.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2023.0.1.2</spring-cloud-alibaba.version>

        <!-- seata -->
        <seata.version>2.0.0</seata.version>
        <!-- nacos -->
        <nacos.version>2.3.2</nacos.version>

        <!-- 安全框架，包含spring security -->
        <spring-security.version>${spring-boot.version}</spring-security.version>
        <jwt.version>0.9.1</jwt.version>
        <jwt-api.version>0.11.5</jwt-api.version>

        <!-- 缓存及分布式锁 -->
        <redis.version>${spring-boot.version}</redis.version>
        <redisson.version>3.24.3</redisson.version>
        <commons-pool2.version>2.11.1</commons-pool2.version>

        <!-- 服务监控 -->

        <!-- 持久层 -->
        <mysql-connector.version>8.0.33</mysql-connector.version>
        <druid.version>1.2.18</druid.version>
        <spring-mybatis.version>3.0.3</spring-mybatis.version>
        <tk-mapper.version>4.2.2</tk-mapper.version>
        <pagehelper.version>1.4.6</pagehelper.version>
        <persistence.version>1.0</persistence.version>

        <!-- 支付组件 -->
        <alipay.version>4.39.79.ALL</alipay.version>

        <!-- 测试 -->
        <junit.version>4.13.2</junit.version>
        <spring-test.version>${spring-boot.version}</spring-test.version>

        <!-- 其他依赖 -->
        <hutool.version>5.8.29</hutool.version>
        <apache-commons.version>3.12.0</apache-commons.version>
        <common-io.version>2.11.0</common-io.version>
        <common.collection>3.2.2</common.collection>
        <guava.version>32.1.3-jre</guava.version>
        <fastjson2.version>2.0.42</fastjson2.version>
        <jackson.version>2.17.2</jackson.version>
        <lombok.version>1.18.34</lombok.version>
        <gson.version>2.10.1</gson.version>
        <!-- 解析客户端操作系统、浏览器等 -->
        <UserAgentUtils.version>1.21</UserAgentUtils.version>

        <!-- maven插件相关 -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- spring-boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud-alibaba -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- nacos -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- seata -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba</groupId>
                        <artifactId>druid</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- web -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- aop -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- validation -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- Spring Boot 配置所需依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- spring security -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-security.version}</version>
            </dependency>

            <!-- jwt-api -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jwt-api.version}</version>
            </dependency>

            <!-- jwt-impl -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jwt-api.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- jwt-jackson -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jwt-api.version}</version>
            </dependency>

            <!-- redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${redis.version}</version>
            </dependency>

            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!-- redis连接池 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>

            <!-- Mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring-mybatis.version}</version>
            </dependency>

            <!-- Mapper -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper</artifactId>
                <version>${tk-mapper.version}</version>
            </dependency>

            <!-- pageHelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- 实体类表注解 -->
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>${persistence.version}</version>
            </dependency>

            <!-- alipay，阿里云支付 -->
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>${alipay.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-test.version}</version>
            </dependency>

            <!-- junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- hutool -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- apache-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons.version}</version>
            </dependency>

            <!-- common-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${common-io.version}</version>
            </dependency>

            <!-- Java标准的Collections API提供了相当好的补充 -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${common.collection}</version>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- fastjson2 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- 解析客户端操作系统、浏览器等 -->
            <dependency>
                <groupId>eu.bitwalker</groupId>
                <artifactId>UserAgentUtils</artifactId>
                <version>${UserAgentUtils.version}</version>
            </dependency>

            <!-- 本地服务，核心通用组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-core</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 通用组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-common</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 数据源组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-datasource</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 缓存组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-cache</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 安全组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-security</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- Elasticsearch全文搜索组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-elasticsearch</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 系统模块 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-system</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 认证授权组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-auth</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 日志组件 -->
            <dependency>
                <groupId>com.xazhao</groupId>
                <artifactId>whisper-log</artifactId>
                <version>${revision}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- maven插件 -->
    <build>
        <finalName>${project.name}</finalName>
        <plugins>
            <!-- 统一 whisper 项目版本 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <parameters>true</parameters>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <debug>false</debug>
                    <!-- 编译参数写在arg中，解决Spring Boot 3.2的Parameter Name Discovery问题 -->
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- 打包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <!-- 将引入的 jar 打入其中 -->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 拷贝资源文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*/**</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <!-- 配置 aliyun / huawei 的Maven源 -->
    <repositories>
        <!-- aliyun -->
        <repository>
            <id>central</id>
            <url>https://maven.aliyun.com/repository/central</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <!-- huawei -->
        <repository>
            <id>huaweicloud</id>
            <name>huawei</name>
            <url>https://mirrors.huaweicloud.com/repository/maven/</url>
        </repository>

        <!-- Spring -->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>